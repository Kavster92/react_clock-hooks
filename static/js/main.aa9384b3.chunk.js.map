{"version":3,"sources":["components/clock.tsx","App.tsx","index.tsx"],"names":["Clock","name","useState","Date","time","setTime","useEffect","timerId","window","setInterval","newTime","console","info","toUTCString","slice","clearInterval","className","App","initialClockName","clockName","setClockName","isClockVisible","setIsClockVisible","onRightClick","event","preventDefault","onClick","debug","document","addEventListener","value","now","toString","getRandomName","removeEventListener","ReactDOM","render","getElementById"],"mappings":"oLAGaA,EAAoC,SAAC,GAAc,IAAZC,EAAW,EAAXA,KAClD,EAAwBC,mBAAS,IAAIC,MAArC,mBAAOC,EAAP,KAAaC,EAAb,KAaA,OAXAC,qBAAU,WACR,IAAMC,EAAUC,OAAOC,aAAY,WACjC,IAAMC,EAAU,IAAIP,KAEpBE,EAAQK,GACRC,QAAQC,KAAKF,EAAQG,cAAcC,OAAO,IAAK,MAC9C,KAEH,OAAO,kBAAMN,OAAOO,cAAcR,MACjC,IAGD,sBAAKS,UAAU,QAAf,UACE,wBAAQA,UAAU,cAAlB,SACGf,IAGF,YAED,sBAAMe,UAAU,cAAhB,SACGZ,EAAKS,cAAcC,OAAO,IAAK,SCfjC,IAAMG,EAAgB,WAC3B,IAAMC,EAAmB,UACzB,EAAkChB,mBAASgB,GAA3C,mBAAOC,EAAP,KAAkBC,EAAlB,KACA,EAA4ClB,oBAAS,GAArD,mBAAOmB,EAAP,KAAuBC,EAAvB,KAEMC,EAAe,SAACC,GACpBA,EAAMC,iBACNH,GAAkB,IAGdI,EAAU,kBAAMJ,GAAkB,IAwBxC,OAtBAhB,qBAAU,WACJe,GAAkBF,IAAcD,GAClCP,QAAQgB,MAAR,qBAA4BR,MAE7B,CAACA,IAEJb,qBAAU,WACRsB,SAASC,iBAAiB,QAASH,GACnCE,SAASC,iBAAiB,cAAeN,GAEzC,IAAMhB,EAAUC,OAAOC,aACrB,kBAAMW,EA7BZ,WACE,IAAMU,EAAQ3B,KAAK4B,MAAMC,WAAWlB,OAAO,GAE3C,MAAM,SAAN,OAAgBgB,GA0BOG,MACnB,MAGF,OAAO,WACLL,SAASM,oBAAoB,QAASR,GACtCE,SAASM,oBAAoB,cAAeX,GAC5Cf,OAAOO,cAAcR,MAEtB,IAGD,sBAAKS,UAAU,MAAf,UACE,6CACCK,GACC,cAAC,EAAD,CAAOpB,KAAMkB,QC9CrBgB,IAASC,OACP,cAAC,EAAD,IACAR,SAASS,eAAe,U","file":"static/js/main.aa9384b3.chunk.js","sourcesContent":["/* eslint-disable no-console */\nimport { useEffect, useState } from 'react';\n\nexport const Clock: React.FC<{ name: string }> = ({ name }) => {\n  const [time, setTime] = useState(new Date());\n\n  useEffect(() => {\n    const timerId = window.setInterval(() => {\n      const newTime = new Date();\n\n      setTime(newTime);\n      console.info(newTime.toUTCString().slice(-12, -4));\n    }, 1000);\n\n    return () => window.clearInterval(timerId);\n  }, []);\n\n  return (\n    <div className=\"Clock\">\n      <strong className=\"Clock__name\">\n        {name}\n      </strong>\n\n      {' time is '}\n\n      <span className=\"Clock__time\">\n        {time.toUTCString().slice(-12, -4)}\n      </span>\n    </div>\n  );\n};\n","/* eslint-disable */\nimport React, { useEffect, useState } from 'react';\nimport './App.scss';\nimport { Clock } from './components/clock';\n\nfunction getRandomName(): string {\n  const value = Date.now().toString().slice(-4);\n\n  return `Clock-${value}`;\n}\n\nexport const App: React.FC = () => {\n  const initialClockName = 'Clock-0';\n  const [clockName, setClockName] = useState(initialClockName);\n  const [isClockVisible, setIsClockVisible] = useState(true);\n\n  const onRightClick = (event: MouseEvent) => {\n    event.preventDefault();\n    setIsClockVisible(false);\n  };\n\n  const onClick = () => setIsClockVisible(true);\n\n  useEffect(() => {\n    if (isClockVisible && clockName !== initialClockName) {\n      console.debug(`Renamed to ${clockName}`);\n    }\n  }, [clockName]);\n\n  useEffect(() => {\n    document.addEventListener('click', onClick);\n    document.addEventListener('contextmenu', onRightClick);\n\n    const timerId = window.setInterval(\n      () => setClockName(getRandomName()),\n      3300,\n    );\n\n    return () => {\n      document.removeEventListener('click', onClick);\n      document.removeEventListener('contextmenu', onRightClick);\n      window.clearInterval(timerId);\n    };\n  }, []);\n\n  return (\n    <div className=\"App\">\n      <h1>React Clock</h1>\n      {isClockVisible && (\n        <Clock name={clockName} />\n      )}\n    </div>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}